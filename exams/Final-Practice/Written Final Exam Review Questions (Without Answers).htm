<!DOCTYPE html>
<!-- saved from url=(0087)https://kyledewey.github.io/comp110-spring18/exams/final/questions_without_answers.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>Written Final Exam Review Questions (Without Answers)</title>
  </head>

  <body data-new-gr-c-s-check-loaded="14.984.0" data-gr-ext-installed="">
    <h1>Written Final Exam Review Questions (Without Answers)</h1>
    <p>
      The written portion will require you to read and understand code, as well as answer short-answer questions related to programming.
      You may also be asked to write short amounts of code.
    </p>
    <p>
      The exam is <b>cumulative</b>, but it is biased towards material covered since the last exam.
      The exam will be composed of questions based off of the following sources:
    </p>
    <ul>
      <li>This review</li>
      <li><b>All</b> labs</li>
      <li>The lab exam 1 & 2 review</a></li>
      <li>The midterm review</a></li>
    </ul>
    <p>
      All topics which could potentially be on the exam are somehow covered by one of the above sources.
    </p>
    <p>
      The exam is purely individual effort; <b>any violations will result in a 0 on the exam.</b>
    </p>

    <h1>Questions</h1>
    <ol>
      <li>
        <p>
          Consider the following code snippet:
        </p>
<pre>int[] arr1 = new int[]{1, 2, 3};
int[] arr2 = arr1;
</pre>
        <p>
          Write a memory diagram representing how memory “looks” after the above code snippet is executed.
        </p>
      </li>
      <li>
        <p>
          Consider the following code snippet:
        </p>
<pre>int[] arr1 = new int[]{1, 2, 3};
int[] arr2 = arr1;
arr1[0] = 5;
arr2[2] = 7;
</pre>
        <p>
          Write a memory diagram representing how memory “looks” after the above code snippet is executed.
        </p>
      </li>
      <li>
        <p>
          Consider the following code snippet:
        </p>
<pre>int[] a = new int[]{4, 5, 6};
int[] b = new int[]{7, 8};
int[] c = new int[]{9};
int[] d = new int[0];
int[][] arr = new int[][]{a, b, c, d};
</pre>
        <p>
          Write a memory diagram representing how memory “looks” after the above code snippet is executed.
        </p>
      </li>
      <li>
        <p>
          Consider the following code snippet:
        </p>
<pre>public class TwoInstance {
  private int x;
  private Object obj;

  public TwoInstance(int x, Object obj) {
    this.x = x;
    this.obj = obj;
  }

  public static void main(String[] args) {
    TwoInstance first = new TwoInstance(3, new Object());
    Object temp = new Object();
    TwoInstance second = new TwoInstance(7, temp);
    // HERE
    System.out.println();
  }
}
</pre>
        <p>
          Assume we run the <code>main</code> method of the above program.
          Write a memory diagram representing how memory “looks” when <code>// HERE</code> is reached.
          You do <b>not</b> need to include <code>args</code> or <code>this</code> in your diagram.
        </p>
      </li>
      <li>
        What is wrong with the following code, if anything?
<pre>public class Class1 {
  private int x;
  public Class1(int x) {
    this.x = x;
  }
}

public class Class2 extends Class1 {}
</pre>
      </li>
      <li>
        What is wrong with the following code, if anything?
<pre>public abstract class Class5 {
  public abstract void m();
}

public class Class6 extends Class5 {}
</pre>
      </li>
      <li>
        What is wrong with the following code, if anything?
<pre>public abstract class Class7 {
  public abstract void m();
}

public abstract class Class8 extends Class7 {}
</pre>
      </li>
      <li>
        What is wrong with the following code, if anything?
<pre>public interface Interface1 {
  public void m();
}

public abstract class Class9 implements Interface1 {}
</pre>
      </li>
      <li>
        What is wrong with the following code, if anything?
<pre>public interface Interface2 {
  public void m();
}

public class Class10 implements Interface2 {}
</pre>
      </li>
      <li>
        What is wrong with the following code, if anything?
<pre>public class Class11 {}
public class Class12 extends Class11 {
  public static void m() {
    Class11 x = new Class12();
  }
}
</pre>
      </li>
      <li>
        What is the output of the <code>main</code> method of <code>Class13</code> below?
<pre>public class Class14 {
  public void m() {
    System.out.println("foo");
  }
}

public class Class15 extends Class14 {
  public void m() {
    System.out.println("bar");
  }
}

public class Class13 {
  public static void main(String[] args) {
    Class14 x = new Class14();
    Class14 y = new Class15();
    Class15 z = new Class15();

    x.m();
    y.m();
    z.m();
  }
}
</pre>
      </li>
      <li>
        What is the output of the <code>main</code> method of <code>Class16</code> below?
<pre>public class Class17 extends Exception {}

public class Class16 {
  public static void throwException() throws Class17 {
    throw new Class17();
  }

  public static void main(String[] args) {
    System.out.println(1);
    try {
      System.out.println(2);
      throwException();
      System.out.println(3);
    } catch (Class17 e) {
      System.out.println(4);
    }
    System.out.println(5);
  }
}
</pre>
      </li>
      <li>
        What is wrong with the following code, if anything?
<pre>public class Class18 {}

public class Class19 {
  public static void m() throws Class18 {
    throw new Class18();
  }
}
</pre>
      </li>
      <li>
        What is wrong with the following code, if anything?
<pre>public class Class20 extends Exception {}

public class Class21 {
  public static void m() {
    throw new Class20();
  }
}
</pre>
      </li>
      <li>
        What is wrong with the following code, if anything?
<pre>public class Class22 extends Exception {}

public class Class23 {
  public static int m() throws Class22 {
    return 42;
  }
}
</pre>
      </li>
      <li>
        What is wrong with the following code, if anything?
<pre>public class Class24 extends Exception {}

public class Class25 {
  public static void throwsException() throws Class24 {
    throw new Class24();
  }
  public static int m() throws Class24 {
    try {
      throwsException();
    } catch (Class24 e) {
      return 1;
    }
    return 0;
  }
}
</pre>
      </li>
      <li>
        What is wrong with the following code, if anything?
<pre>public class Class26 extends Exception {}

public class Class27 {
  public static void throwsException() throws Class26 {
    throw new Class26();
  }
  public static int m() throws Class26 {
    try {
      throwsException();
    } catch (Class26 e) {
      return 1;
    }
  }
}
</pre>
      </li>
      <li>
        What is wrong with the following code, if anything?
<pre>import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class Class28 {
  public static void main(String[] args) {
    try {
      Scanner input = new Scanner(new File("input.txt"));
      if (input.hasNextLine()) {
        System.out.println(input.nextLine());
      }
    } catch(FileNotFoundException e) {
      System.out.println(e.getMessage());
    }
  }
}
</pre>
      </li>
      <li>
        What is wrong with the following code, if anything?
<pre>import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class Class29 {
  public static void main(String[] args) throws FileNotFoundException {
    Scanner input = new Scanner(new File("input.txt"));
    if (input.hasNextLine()) {
      System.out.println(input.nextLine());
    }
    input.close();
  }
}
</pre>
      </li>
    </ol>


</body></html>
